plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'checkstyle'
}

group = 'uk.ac.cf.cs.ons.skillsdb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
reporting.baseDir = "my-reports"
testResultsDirName = "$buildDir/my-test-results"

task showDirs {
	doLast {
		logger.quiet(rootDir.toPath().relativize(project.reportsDir.toPath()).toString())
		logger.quiet(rootDir.toPath().relativize(project.testResultsDir.toPath()).toString())
	}
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation 'org.hibernate:hibernate-core:5.4.9.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'mysql:mysql-connector-java'
	compile group: 'com.h2database', name: 'h2', version: '1.3.148'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'com.h2database:h2'
	testCompile 'junit:junit:4.12'

}

test {
	useJUnit()
	maxHeapSize = '1G'
	outputs.dir snippetsDir
//	useJUnitPlatform()
	reports {
		junitXml.enabled = true
		html.enabled = true
	}
}

checkstyleMain{
    configFile = file("${configDir}/checkstyleMain.xml")
    maxErrors=1000
}

checkstyleTest{
    configFile = file("${configDir}/checkstyleTest.xml")
    ignoreFailures=true
    maxErrors=5000
}


/* Comment to use Main profile (MySQL), uncomment to use Demo profile (h2) */

bootRun {
	systemProperty 'spring.profiles.active', 'demo'
	main = 'uk.ac.cf.cs.ons.skillsdb.skillsdb.SkillsdbApplication'
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
